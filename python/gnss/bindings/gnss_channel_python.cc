/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(gnss_channel.h)                                            */
/* BINDTOOL_HEADER_FILE_HASH(11d4cedc4a6f5452ae35b1c4696a8bb0)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/gnss/gnss_channel.h>
#include <gnss_channel_pydoc.h>

void bind_gnss_channel(py::module& m)
{
    using gnss_channel = gr::gnss::gnss_channel;

    py::class_<gnss_channel,
               gr::hier_block2,
               std::shared_ptr<gnss_channel>>(m, "gnss_channel", D(gnss_channel))
        .def(
            py::init(&gnss_channel::make),
            py::arg("sampling_freq"),
            py::arg("dll_bw_coarse"),
            py::arg("pll_bw_coarse"),
            py::arg("dll_bw_fine"),
            py::arg("pll_bw_fine"),
            D(gnss_channel,make)
        )
        .def(
            "set_acq_params",
            &gnss_channel::set_acq_params,
            py::arg("system"),
            py::arg("id")
        )
        .def(
            "get_acq_params",
            &gnss_channel::get_acq_params,
            py::arg("system"),
            py::arg("id")
        )
        ;
}
